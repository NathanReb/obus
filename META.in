# -*- conf -*-

description = "Pure OCaml implementation of D-Bus"
version = "$(version)"
requires = "lwt.react lwt.unix xmlm"
archive(byte) = "obus.cma"
archive(native) = "obus.cmxa"
archive(plugin,byte) = "obus.cma"
archive(plugin,native) = "obus.cmxs"

package "hal" (
  version = "[distrubuted with OBus]"
  description = "Freedesktop hal service binding"
  requires = "obus"
  archive(byte) = "hal.cma"
  archive(native) = "hal.cmxa"
  archive(plugin,byte) = "hal.cma"
  archive(plugin,native) = "hal.cmxs"
)

package "notification" (
  version = "[distrubuted with OBus]"
  description = "Freedesktop notification service binding"
  requires = "obus"
  archive(byte) = "notification.cma"
  archive(native) = "notification.cmxa"
  archive(plugin,byte) = "notification.cma"
  archive(plugin,native) = "notification.cmxs"
)

package "network-manager" (
  version = "[distrubuted with OBus]"
  description = "Freedesktop NetworkManager service binding"
  requires = "obus"
  archive(byte) = "network-manager.cma"
  archive(native) = "network-manager.cmxa"
  archive(plugin,byte) = "network-manager.cma"
  archive(plugin,native) = "network-manager.cmxs"
)

package "upower" (
  version = "[distrubuted with OBus]"
  description = "Freedesktop UPower service binding"
  requires = "obus"
  archive(byte) = "upower.cma"
  archive(native) = "upower.cmxa"
  archive(plugin,byte) = "upower.cma"
  archive(plugin,native) = "upower.cmxs"
)

package "udisks" (
  version = "[distrubuted with OBus]"
  description = "Freedesktop UDisks service binding"
  requires = "obus"
  archive(byte) = "udisks.cma"
  archive(native) = "udisks.cmxa"
  archive(plugin,byte) = "udisks.cma"
  archive(plugin,native) = "udisks.cmxs"
)

package "policykit" (
  version = "[distrubuted with OBus]"
  description = "Freedesktop Policykit service binding"
  requires = "obus"
  archive(byte) = "policykit.cma"
  archive(native) = "policykit.cmxa"
  archive(plugin,byte) = "policykit.cma"
  archive(plugin,native) = "policykit.cmxs"
)
