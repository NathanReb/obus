(*
 * uDisks_interfaces.obus
 * ----------------------
 * Copyright : (c) 2010, Jeremie Dimino <jeremie@dimino.org>
 * Licence   : BSD3
 *
 * This file is a part of obus, an ocaml implementation of D-Bus.
 *)

interface org.freedesktop.UDisks {
  method EnumerateAdapters : () -> (devices : object_path array)
  method EnumerateExpanders : () -> (devices : object_path array)
  method EnumeratePorts : () -> (devices : object_path array)
  method EnumerateDevices : () -> (devices : object_path array)
  method EnumerateDeviceFiles : () -> (device_files : string array)
  method FindDeviceByDeviceFile : (device_file : string) -> (device : object_path)
  method FindDeviceByMajorMinor : (device_major : int64, device_minor : int64) -> (device : object_path)
  method DriveInhibitAllPolling : (options : string array) -> (cookie : string)
  method DriveUninhibitAllPolling : (cookie : string) -> ()
  method DriveSetAllSpindownTimeouts : (timeout_seconds : int32, options : string array) -> (cookie : string)
  method DriveUnsetAllSpindownTimeouts : (cookie : string) -> ()
  method LinuxLvm2VGStart : (uuid : string, options : string array) -> ()
  method LinuxLvm2VGStop : (uuid : string, options : string array) -> ()
  method LinuxLvm2VGSetName : (uuid : string, name : string) -> ()
  method LinuxLvm2VGAddPV : (uuid : string, physical_volume : object_path, options : string array) -> ()
  method LinuxLvm2VGRemovePV : (vg_uuid : string, pv_uuid : string, options : string array) -> ()
  method LinuxLvm2LVSetName : (group_uuid : string, uuid : string, name : string) -> ()
  method LinuxLvm2LVStart : (group_uuid : string, uuid : string, options : string array) -> ()
  method LinuxLvm2LVRemove : (group_uuid : string, uuid : string, options : string array) -> ()
  method LinuxLvm2LVCreate : (group_uuid : string, name : string, size : uint64, num_stripes : uint32, stripe_size : uint64, num_mirrors : uint32, options : string array, fstype : string, fsoptions : string array) -> (created_device : object_path)
  method LinuxMdStart : (components : object_path array, options : string array) -> (device : object_path)
  method LinuxMdCreate : (components : object_path array, level : string, stripe_size : uint64, name : string, options : string array) -> (device : object_path)
  method Inhibit : () -> (cookie : string)
  method Uninhibit : (cookie : string) -> ()
  signal DeviceAdded : (device : object_path)
  signal DeviceRemoved : (device : object_path)
  signal DeviceChanged : (device : object_path)
  signal DeviceJobChanged : (device : object_path, job_in_progress : boolean, job_is_cancellable : boolean, job_id : string, job_num_tasks : int32, job_cur_task : int32, job_cur_task_id : string, job_cur_task_percentage : double)
  signal AdapterAdded : (adapter : object_path)
  signal AdapterRemoved : (adapter : object_path)
  signal AdapterChanged : (adapter : object_path)
  signal ExpanderAdded : (expander : object_path)
  signal ExpanderRemoved : (expander : object_path)
  signal ExpanderChanged : (expander : object_path)
  signal PortAdded : (port : object_path)
  signal PortRemoved : (port : object_path)
  signal PortChanged : (port : object_path)
  property_r DaemonVersion : string
  property_r DaemonIsInhibited : boolean
  property_r SupportsLuksDevices : boolean
  property_r KnownFilesystems : (string * string * boolean * boolean * boolean * uint32 * boolean * boolean * boolean * boolean * boolean * boolean * boolean * boolean) array
}

interface org.freedesktop.UDisks.Adapter {
  signal Changed : ()
  property_r NativePath : string
  property_r Vendor : string
  property_r Model : string
  property_r Driver : string
  property_r NumPorts : uint32
  property_r Fabric : string
}

interface org.freedesktop.UDisks.Device {
  method JobCancel : () -> ()
  method PartitionTableCreate : (scheme : string, options : string array) -> ()
  method PartitionDelete : (options : string array) -> ()
  method PartitionCreate : (offset : uint64, size : uint64, type : string, label : string, flags : string array, options : string array, fstype : string, fsoptions : string array) -> (created_device : object_path)
  method PartitionModify : (type : string, label : string, flags : string array) -> ()
  method FilesystemCreate : (fstype : string, options : string array) -> ()
  method FilesystemSetLabel : (new_label : string) -> ()
  method FilesystemMount : (filesystem_type : string, options : string array) -> (mount_path : string)
  method FilesystemUnmount : (options : string array) -> ()
  method FilesystemCheck : (options : string array) -> (is_clean : boolean)
  method FilesystemListOpenFiles : () -> (processes : (uint32 * uint32 * string) array)
  method LuksUnlock : (passphrase : string, options : string array) -> (cleartext_device : object_path)
  method LuksLock : (options : string array) -> ()
  method LuksChangePassphrase : (current_passphrase : string, new_passphrase : string) -> ()
  method LinuxMdAddSpare : (component : object_path, options : string array) -> ()
  method LinuxMdExpand : (components : object_path array, options : string array) -> ()
  method LinuxMdRemoveComponent : (component : object_path, options : string array) -> ()
  method LinuxMdStop : (options : string array) -> ()
  method LinuxLvm2LVStop : (options : string array) -> ()
  method LinuxMdCheck : (options : string array) -> (number_of_errors : uint64)
  method DriveInhibitPolling : (options : string array) -> (cookie : string)
  method DriveUninhibitPolling : (cookie : string) -> ()
  method DrivePollMedia : () -> ()
  method DriveEject : (options : string array) -> ()
  method DriveDetach : (options : string array) -> ()
  method DriveSetSpindownTimeout : (timeout_seconds : int32, options : string array) -> (cookie : string)
  method DriveUnsetSpindownTimeout : (cookie : string) -> ()
  method DriveAtaSmartRefreshData : (options : string array) -> ()
  method DriveAtaSmartInitiateSelftest : (test : string, options : string array) -> ()
  method DriveBenchmark : (do_write_benchmark : boolean, options : string array) -> (read_transfer_rate_results : (uint64 * double) array, write_transfer_rate_results : (uint64 * double) array, access_time_results : (uint64 * double) array)
  signal Changed : ()
  signal JobChanged : (job_in_progress : boolean, job_is_cancellable : boolean, job_id : string, job_initiated_by_uid : uint32, job_percentage : double)
  property_r NativePath : string
  property_r DeviceDetectionTime : uint64
  property_r DeviceMediaDetectionTime : uint64
  property_r DeviceMajor : int64
  property_r DeviceMinor : int64
  property_r DeviceFile : string
  property_r DeviceFilePresentation : string
  property_r DeviceFileById : string array
  property_r DeviceFileByPath : string array
  property_r DeviceIsSystemInternal : boolean
  property_r DeviceIsPartition : boolean
  property_r DeviceIsPartitionTable : boolean
  property_r DeviceIsRemovable : boolean
  property_r DeviceIsMediaAvailable : boolean
  property_r DeviceIsMediaChangeDetected : boolean
  property_r DeviceIsMediaChangeDetectionPolling : boolean
  property_r DeviceIsMediaChangeDetectionInhibitable : boolean
  property_r DeviceIsMediaChangeDetectionInhibited : boolean
  property_r DeviceIsReadOnly : boolean
  property_r DeviceIsDrive : boolean
  property_r DeviceIsOpticalDisc : boolean
  property_r DeviceIsMounted : boolean
  property_r DeviceMountPaths : string array
  property_r DeviceMountedByUid : uint32
  property_r DeviceIsLuks : boolean
  property_r DeviceIsLuksCleartext : boolean
  property_r DeviceIsLinuxMdComponent : boolean
  property_r DeviceIsLinuxMd : boolean
  property_r DeviceIsLinuxLvm2LV : boolean
  property_r DeviceIsLinuxLvm2PV : boolean
  property_r DeviceIsLinuxDmmpComponent : boolean
  property_r DeviceIsLinuxDmmp : boolean
  property_r DeviceIsLinuxLoop : boolean
  property_r DeviceSize : uint64
  property_r DeviceBlockSize : uint64
  property_r DevicePresentationHide : boolean
  property_r DevicePresentationNopolicy : boolean
  property_r DevicePresentationName : string
  property_r DevicePresentationIconName : string
  property_r JobInProgress : boolean
  property_r JobId : string
  property_r JobInitiatedByUid : uint32
  property_r JobIsCancellable : boolean
  property_r JobPercentage : double
  property_r IdUsage : string
  property_r IdType : string
  property_r IdVersion : string
  property_r IdUuid : string
  property_r IdLabel : string
  property_r LuksHolder : object_path
  property_r LuksCleartextSlave : object_path
  property_r LuksCleartextUnlockedByUid : uint32
  property_r PartitionSlave : object_path
  property_r PartitionScheme : string
  property_r PartitionType : string
  property_r PartitionLabel : string
  property_r PartitionUuid : string
  property_r PartitionFlags : string array
  property_r PartitionNumber : int32
  property_r PartitionOffset : uint64
  property_r PartitionSize : uint64
  property_r PartitionAlignmentOffset : uint64
  property_r PartitionTableScheme : string
  property_r PartitionTableCount : int32
  property_r DriveVendor : string
  property_r DriveModel : string
  property_r DriveRevision : string
  property_r DriveSerial : string
  property_r DriveWwn : string
  property_r DriveRotationRate : uint32
  property_r DriveWriteCache : string
  property_r DriveConnectionInterface : string
  property_r DriveConnectionSpeed : uint64
  property_r DriveMediaCompatibility : string array
  property_r DriveMedia : string
  property_r DriveIsMediaEjectable : boolean
  property_r DriveCanDetach : boolean
  property_r DriveCanSpindown : boolean
  property_r DriveIsRotational : boolean
  property_r DriveAdapter : object_path
  property_r DrivePorts : object_path array
  property_r DriveSimilarDevices : object_path array
  property_r OpticalDiscIsBlank : boolean
  property_r OpticalDiscIsAppendable : boolean
  property_r OpticalDiscIsClosed : boolean
  property_r OpticalDiscNumTracks : uint32
  property_r OpticalDiscNumAudioTracks : uint32
  property_r OpticalDiscNumSessions : uint32
  property_r DriveAtaSmartIsAvailable : boolean
  property_r DriveAtaSmartTimeCollected : uint64
  property_r DriveAtaSmartStatus : string
  property_r DriveAtaSmartBlob : byte array
  property_r LinuxMdComponentLevel : string
  property_r LinuxMdComponentPosition : int32
  property_r LinuxMdComponentNumRaidDevices : int32
  property_r LinuxMdComponentUuid : string
  property_r LinuxMdComponentName : string
  property_r LinuxMdComponentHomeHost : string
  property_r LinuxMdComponentVersion : string
  property_r LinuxMdComponentHolder : object_path
  property_r LinuxMdComponentState : string array
  property_r LinuxMdState : string
  property_r LinuxMdLevel : string
  property_r LinuxMdUuid : string
  property_r LinuxMdHomeHost : string
  property_r LinuxMdName : string
  property_r LinuxMdNumRaidDevices : int32
  property_r LinuxMdVersion : string
  property_r LinuxMdSlaves : object_path array
  property_r LinuxMdIsDegraded : boolean
  property_r LinuxMdSyncAction : string
  property_r LinuxMdSyncPercentage : double
  property_r LinuxMdSyncSpeed : uint64
  property_r LinuxLvm2PVUuid : string
  property_r LinuxLvm2PVNumMetadataAreas : uint32
  property_r LinuxLvm2PVGroupName : string
  property_r LinuxLvm2PVGroupUuid : string
  property_r LinuxLvm2PVGroupSize : uint64
  property_r LinuxLvm2PVGroupUnallocatedSize : uint64
  property_r LinuxLvm2PVGroupSequenceNumber : uint64
  property_r LinuxLvm2PVGroupExtentSize : uint64
  property_r LinuxLvm2PVGroupPhysicalVolumes : string array
  property_r LinuxLvm2PVGroupLogicalVolumes : string array
  property_r LinuxLvm2LVName : string
  property_r LinuxLvm2LVUuid : string
  property_r LinuxLvm2LVGroupName : string
  property_r LinuxLvm2LVGroupUuid : string
  property_r LinuxDmmpComponentHolder : object_path
  property_r LinuxDmmpName : string
  property_r LinuxDmmpSlaves : object_path array
  property_r LinuxDmmpParameters : string
  property_r LinuxLoopFilename : string
}

interface org.freedesktop.UDisks.Expander {
  signal Changed : ()
  property_r NativePath : string
  property_r Vendor : string
  property_r Model : string
  property_r Revision : string
  property_r NumPorts : uint32
  property_r UpstreamPorts : object_path array
  property_r Adapter : object_path
}

interface org.freedesktop.UDisks.Port {
  signal Changed : ()
  property_r NativePath : string
  property_r Adapter : object_path
  property_r Parent : object_path
  property_r Number : int32
  property_r ConnectorType : string
}
