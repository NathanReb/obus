(* File auto-generated by obus_gen_interface.best, DO NOT EDIT. *)
open OBus_value
open OBus_value.C
open OBus_member
open OBus_object
module Org_freedesktop_DBus =
struct
  let interface = "org.freedesktop.DBus"
  let m_Hello = {
    Method.interface = interface;
    Method.member = "Hello";
    Method.i_args = (arg0);
    Method.o_args = (arg1
                       (None, basic_string));
  }
  let m_RequestName = {
    Method.interface = interface;
    Method.member = "RequestName";
    Method.i_args = (arg2
                       (None, basic_string)
                       (None, basic_uint32));
    Method.o_args = (arg1
                       (None, basic_uint32));
  }
  let m_ReleaseName = {
    Method.interface = interface;
    Method.member = "ReleaseName";
    Method.i_args = (arg1
                       (None, basic_string));
    Method.o_args = (arg1
                       (None, basic_uint32));
  }
  let m_StartServiceByName = {
    Method.interface = interface;
    Method.member = "StartServiceByName";
    Method.i_args = (arg2
                       (None, basic_string)
                       (None, basic_uint32));
    Method.o_args = (arg1
                       (None, basic_uint32));
  }
  let m_UpdateActivationEnvironment = {
    Method.interface = interface;
    Method.member = "UpdateActivationEnvironment";
    Method.i_args = (arg1
                       (None, dict string basic_string));
    Method.o_args = (arg0);
  }
  let m_NameHasOwner = {
    Method.interface = interface;
    Method.member = "NameHasOwner";
    Method.i_args = (arg1
                       (None, basic_string));
    Method.o_args = (arg1
                       (None, basic_boolean));
  }
  let m_ListNames = {
    Method.interface = interface;
    Method.member = "ListNames";
    Method.i_args = (arg0);
    Method.o_args = (arg1
                       (None, array basic_string));
  }
  let m_ListActivatableNames = {
    Method.interface = interface;
    Method.member = "ListActivatableNames";
    Method.i_args = (arg0);
    Method.o_args = (arg1
                       (None, array basic_string));
  }
  let m_AddMatch = {
    Method.interface = interface;
    Method.member = "AddMatch";
    Method.i_args = (arg1
                       (None, basic_string));
    Method.o_args = (arg0);
  }
  let m_RemoveMatch = {
    Method.interface = interface;
    Method.member = "RemoveMatch";
    Method.i_args = (arg1
                       (None, basic_string));
    Method.o_args = (arg0);
  }
  let m_GetNameOwner = {
    Method.interface = interface;
    Method.member = "GetNameOwner";
    Method.i_args = (arg1
                       (None, basic_string));
    Method.o_args = (arg1
                       (None, basic_string));
  }
  let m_ListQueuedOwners = {
    Method.interface = interface;
    Method.member = "ListQueuedOwners";
    Method.i_args = (arg1
                       (None, basic_string));
    Method.o_args = (arg1
                       (None, array basic_string));
  }
  let m_GetConnectionUnixUser = {
    Method.interface = interface;
    Method.member = "GetConnectionUnixUser";
    Method.i_args = (arg1
                       (None, basic_string));
    Method.o_args = (arg1
                       (None, basic_uint32));
  }
  let m_GetConnectionUnixProcessID = {
    Method.interface = interface;
    Method.member = "GetConnectionUnixProcessID";
    Method.i_args = (arg1
                       (None, basic_string));
    Method.o_args = (arg1
                       (None, basic_uint32));
  }
  let m_GetAdtAuditSessionData = {
    Method.interface = interface;
    Method.member = "GetAdtAuditSessionData";
    Method.i_args = (arg1
                       (None, basic_string));
    Method.o_args = (arg1
                       (None, byte_array));
  }
  let m_GetConnectionSELinuxSecurityContext = {
    Method.interface = interface;
    Method.member = "GetConnectionSELinuxSecurityContext";
    Method.i_args = (arg1
                       (None, basic_string));
    Method.o_args = (arg1
                       (None, byte_array));
  }
  let m_ReloadConfig = {
    Method.interface = interface;
    Method.member = "ReloadConfig";
    Method.i_args = (arg0);
    Method.o_args = (arg0);
  }
  let m_GetId = {
    Method.interface = interface;
    Method.member = "GetId";
    Method.i_args = (arg0);
    Method.o_args = (arg1
                       (None, basic_string));
  }
  let s_NameOwnerChanged = {
    Signal.interface = interface;
    Signal.member = "NameOwnerChanged";
    Signal.args = (arg3
                       (None, basic_string)
                       (None, basic_string)
                       (None, basic_string));
  }
  let s_NameLost = {
    Signal.interface = interface;
    Signal.member = "NameLost";
    Signal.args = (arg1
                       (None, basic_string));
  }
  let s_NameAcquired = {
    Signal.interface = interface;
    Signal.member = "NameAcquired";
    Signal.args = (arg1
                       (None, basic_string));
  }
  let make
      ?notify_mode
      ~m_Hello:m__Hello
      ~m_RequestName:m__RequestName
      ~m_ReleaseName:m__ReleaseName
      ~m_StartServiceByName:m__StartServiceByName
      ~m_UpdateActivationEnvironment:m__UpdateActivationEnvironment
      ~m_NameHasOwner:m__NameHasOwner
      ~m_ListNames:m__ListNames
      ~m_ListActivatableNames:m__ListActivatableNames
      ~m_AddMatch:m__AddMatch
      ~m_RemoveMatch:m__RemoveMatch
      ~m_GetNameOwner:m__GetNameOwner
      ~m_ListQueuedOwners:m__ListQueuedOwners
      ~m_GetConnectionUnixUser:m__GetConnectionUnixUser
      ~m_GetConnectionUnixProcessID:m__GetConnectionUnixProcessID
      ~m_GetAdtAuditSessionData:m__GetAdtAuditSessionData
      ~m_GetConnectionSELinuxSecurityContext:m__GetConnectionSELinuxSecurityContext
      ~m_ReloadConfig:m__ReloadConfig
      ~m_GetId:m__GetId
      ()
      =
    OBus_object.make_interface_unsafe ?notify_mode interface
      [|
        method_info m_Hello m__Hello;
        method_info m_RequestName m__RequestName;
        method_info m_ReleaseName m__ReleaseName;
        method_info m_StartServiceByName m__StartServiceByName;
        method_info m_UpdateActivationEnvironment m__UpdateActivationEnvironment;
        method_info m_NameHasOwner m__NameHasOwner;
        method_info m_ListNames m__ListNames;
        method_info m_ListActivatableNames m__ListActivatableNames;
        method_info m_AddMatch m__AddMatch;
        method_info m_RemoveMatch m__RemoveMatch;
        method_info m_GetNameOwner m__GetNameOwner;
        method_info m_ListQueuedOwners m__ListQueuedOwners;
        method_info m_GetConnectionUnixUser m__GetConnectionUnixUser;
        method_info m_GetConnectionUnixProcessID m__GetConnectionUnixProcessID;
        method_info m_GetAdtAuditSessionData m__GetAdtAuditSessionData;
        method_info m_GetConnectionSELinuxSecurityContext m__GetConnectionSELinuxSecurityContext;
        method_info m_ReloadConfig m__ReloadConfig;
        method_info m_GetId m__GetId;
      |]
      [|
        signal_info s_NameOwnerChanged;
        signal_info s_NameLost;
        signal_info s_NameAcquired;
      |]
      [|
      |]
end
