(*
 * wire.mli
 * --------
 * Copyright : (c) 2008, Jeremie Dimino <jeremie@dimino.org>
 * Licence   : BSD3
 *
 * This file is a part of obus, an ocaml implemtation of dbus.
 *)

(** Used by autogenerated interfaces *)

type ptr = int
    (** A position in a buffer *)

type buffer = string
    (** A buffer containing a marshaled value *)

exception Write_error of string
exception Read_error of string

module type Writer = sig
  type 'a t = ptr -> 'a -> unit
  val buffer : buffer
  val pad2 : ptr -> ptr
  val pad4 : ptr -> ptr
  val pad8 : ptr -> ptr
  val bool_boolean : bool t
  val int_int16 : int t
  val int_int32 : int t
  val int_int64 : int t
  val int_uint16 : int t
  val int_uint32 : int t
  val int_uint64 : int t
  val int32_int32 : int32 t
  val int64_int64 : int64 t
  val int32_uint32 : int32 t
  val int64_uint64 : int64 t
  val float_double : float t
  val string_string : ptr -> string -> ptr
  val string_signature : ptr -> string -> ptr
end

module type Reader = sig
  type 'a t = ptr -> 'a
  val buffer : buffer
  val pad2 : ptr -> ptr
  val pad4 : ptr -> ptr
  val pad8 : ptr -> ptr
  val bool_boolean : bool t
  val int_int16 : int t
  val int_int32 : int t
  val int_int64 : int t
  val int_uint16 : int t
  val int_uint32 : int t
  val int_uint64 : int t
  val int32_int32 : int32 t
  val int64_int64 : int64 t
  val int32_uint32 : int32 t
  val int64_uint64 : int64 t
  val float_double : float t
  val string_string : ptr -> ptr * string
  val string_signature : ptr -> ptr * string
end

module type Buffer = sig
  val buffer : buffer
end

module LEWriter(B : Buffer) : Writer
module BEWriter(B : Buffer) : Writer

module LEReader(B : Buffer) : Reader
module BEReader(B : Buffer) : Reader

(** Util functions *)

val read_until : (ptr -> 'a -> ptr * 'a) -> 'a -> ptr -> ptr
