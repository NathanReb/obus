OBus is a pure ocaml implementation of D-Bus.

url: https://forge.ocamlcore.org/projects/obus/

* Requirements:

  obus depends on the following packages:

  lwt:        http://www.ocsigen.org/install/lwt
  xmlm:       http://erratique.ch/software/xmlm

* Installation:

  To compile and install OBus just type:

  $ make all
  $ make PREFIX=<prefix> install

  Packagers may patch the file "oBus_config.ml".

  If you want to only compile/install the libraries, type:

  $ make libs
  $ make install-libs

* Using the library

  OBus install the following packages:

  - obus:
      The core library, implementing the D-Bus protocol.

  - obus.notification:
      Interface to the freedesktop Notification service.

  - obus.hal:
      Interface to the freedesktop Hal service.

  - obus.upower
      Interface to the freedesktop UPower service

  - obus.udisks
      Interface to the freedesktop UDisks service

  - obus.policykit
      Interface to the freedesktop PolicyKit servie

* Using tools:

  There is three tools in the obus distribution:

  obus-introspect which can introspect a D-Bus service, obus-binder
  which is a tool for generating skeleton from D-Bus introspection data
  and obus-dump which can dump the D-Bus traffic of a program.

  The caml files generated by obus-binder are meant to be edited and
  adapted. In practice introspections files contains only marshaling
  informations so it is often not sufficient for creating a usable
  binding.

  Here is a simple example of use of the tools:

  $ obus-introspect org.freedesktop.Notifications /org/freedesktop/Notifications > notif.xml
  $ obus-binder notif.xml

  Note that for some service you can not retrieve all interface
  definitions at run-time, so you have to look at the source or the
  documentation to find them.

* Development:

  The last development version of obus can always be found in the
  darcs repository hosted at darcs.ocamlcore.org:

  $ darcs get http://darcs.ocamlcore.org/repos/obus/obus
